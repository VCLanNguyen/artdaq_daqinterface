

######################### DO NOT MODIFY THIS FILE #########################

#   JCF, Sep-7-2017

#   This sourcefile needs to be sourced before running DAQInterface. 

#   Consequences of sourcing are:
#
#   * An alias is created so the command "DAQInterface" will run DAQInterface
#
#   * The output of a DAQInterface session will be saved in a logfile
#     referred to by $DAQINTERFACE_LOGFILE
#
#   * An optional, user-defined sourcefile referred to by
#     $DAQINTERFACE_USER_SOURCEFILE will also be sourced - see below
#     under "Requirements" for more on this

#   Requirements to be met before the sourcing are:
#
#   * DAQInterface needs to have been successfully set up as a ups product
#
#   * The sourcefile has not yet been sourced successfully in the
#     environment
#
#   * If you want the sourcefile to, in turn, source a user-defined
#     sourcefile, the user-defined sourcefile name needs be referred to
#     by the environment variable $DAQINTERFACE_USER_SOURCEFILE. The
#     user-defined sourcefile must actually be owned by the active user
#     in the environment ($USER), and within its body it must export an
#     environment variable called "DAQINTERFACE_USER_SOURCEFILE_ERRNO"
#     and set it to 0 to let this "parent" sourcefile know that the user
#     sourcefile was sourced correctly. If you do not wish for a
#     user-defined sourcefile to be sourced, you must set
#     DAQINTERFACE_USER_SOURCEFILE to IGNORED. Not setting
#     DAQINTERFACE_USER_SOURCEFILE is treated as an error. 

######################################################################


function cleanup() {
    
    export PATH=$( echo $PATH | sed -r 's!'${ARTDAQ_DAQINTERFACE_DIR}/bin':*!!'  )

    unset DAQINTERFACE_LOGDIR
    unset DAQINTERFACE_LOGFILE
    unset DAQINTERFACE_USER_SOURCEFILE_ERRNO
    unset DAQINTERFACE_STANDARD_SOURCEFILE_SOURCED

    unalias DAQInterface
}

if [[ -n $DAQINTERFACE_STANDARD_SOURCEFILE_SOURCED ]]; then
   echo "You appear to have already sourced this script in this shell; will do nothing"
   return 1
fi

if [[ -n $ARTDAQ_DAQINTERFACE_VERSION ]] ; then

    echo "Using ups-installed DAQInterface, version \"$ARTDAQ_DAQINTERFACE_VERSION\""

else

    echo "DAQInterface does not appear to have been set up as a ups product"
    return 1
fi


# Eric F: "I hacked all my code on a host with no name"

if [[ -z $HOSTNAME ]]; then
   echo
   echo "HOSTNAME not defined, will define it here"
   export HOSTNAME=$( hostname )
   echo "HOSTNAME is now set to $HOSTNAME"
   echo
fi

# daqinterface_functions.sh expects DAQINTERFACE_PARTITION_NUMBER to
# be defined

if [[ -z $DAQINTERFACE_PARTITION_NUMBER ]]; then
   export DAQINTERFACE_PARTITION_NUMBER=0
fi

if [[ -z $DAQINTERFACE_LOGDIR ]]; then
   export DAQINTERFACE_LOGDIR=/tmp/daqinterface_${USER}
fi

mkdir -p $DAQINTERFACE_LOGDIR

# If you change the format of DAQINTERFACE_LOGFILE, make sure this
# change is reflected in the information message that appears after
# source-ing this script 

export DAQINTERFACE_LOGFILE=$DAQINTERFACE_LOGDIR/DAQInterface_partition\${DAQINTERFACE_PARTITION_NUMBER}.log

if [[ -z $ARTDAQ_BASE_PORT ]]; then
   export ARTDAQ_BASE_PORT=10000
fi

if [[ -z $ARTDAQ_PORTS_PER_PARTITION ]]; then
   export ARTDAQ_PORTS_PER_PARTITION=1000
fi

. $ARTDAQ_DAQINTERFACE_DIR/bin/daqinterface_functions.sh

# Make sure the logic to derive DAQInterface port # from partition #
# is the same as in daqinterface_functions.sh!

alias DAQInterface="export DAQINTERFACE_PORT=\$(( \$ARTDAQ_BASE_PORT + \$DAQINTERFACE_PARTITION_NUMBER * \$ARTDAQ_PORTS_PER_PARTITION )); stdbuf -oL $ARTDAQ_DAQINTERFACE_DIR/rc/control/daqinterface.py --partition-number \$DAQINTERFACE_PARTITION_NUMBER --rpc-port \$DAQINTERFACE_PORT  2>&1 | tee -a $DAQINTERFACE_LOGFILE "

export PATH=$ARTDAQ_DAQINTERFACE_DIR/bin:$PATH

if [[ -n $DAQINTERFACE_USER_SOURCEFILE ]]; then

   if [[ "$DAQINTERFACE_USER_SOURCEFILE" != "IGNORED" && -e $DAQINTERFACE_USER_SOURCEFILE ]]; then
       user_sourcefile_owner=$( ls -l $DAQINTERFACE_USER_SOURCEFILE | awk '{print $3}' )

       if [[ "$user_sourcefile_owner" == "$USER" ]]; then
       	  . $DAQINTERFACE_USER_SOURCEFILE
       else

cat<<heredoc

	   ERROR: Current user "$USER" is not the same as the owner of
           ${DAQINTERFACE_USER_SOURCEFILE}; source of
           $DAQINTERFACE_USER_SOURCEFILE will not take place

heredoc

           cleanup
           return 1

       fi
   elif [[ "$DAQINTERFACE_USER_SOURCEFILE" != "IGNORED" && ! -e $DAQINTERFACE_USER_SOURCEFILE ]]; then

cat<<heredoc

	ERROR: DAQINTERFACE_USER_SOURCEFILE environment variable has been
	set, but the would-be sourcefile it refers to,
	"$DAQINTERFACE_USER_SOURCEFILE", doesn't exist. 

heredoc

        cleanup
	return 1
   else   # $DAQINTERFACE_USER_SOURCEFILE == IGNORED, so we don't source a user-defined script
 	 export DAQINTERFACE_USER_SOURCEFILE_ERRNO=0
   fi

else

cat<<heredoc

	ERROR: the DAQINTERFACE_USER_SOURCEFILE environment variable
	must be set, either to the name of the user-defined sourcefile
	you wish to have sourced, or to "IGNORED" if you don't want to
	source a user-defined sourcefile

heredoc

   cleanup
   return 1
fi

if [[ -z $DAQINTERFACE_USER_SOURCEFILE_ERRNO ]] ; then
    
cat<<heredoc

      ERROR: the DAQINTERFACE_USER_SOURCEFILE_ERRNO environment
      variable doesn't exist; this needs to be set in the user script
      referred to by the DAQINTERFACE_USER_SOURCEFILE environment variable

heredoc

    cleanup
    return 1

elif [[ "$DAQINTERFACE_USER_SOURCEFILE_ERRNO" != "0" ]] ; then

cat<<heredoc

      ERROR: the DAQINTERFACE_USER_SOURCEFILE_ERRNO environment
      variable was set by the user-defined source script
      "$DAQINTERFACE_USER_SOURCEFILE" with a value of
      $DAQINTERFACE_USER_SOURCEFILE_ERRNO; anything nonzero is considered to be an error.
heredoc

     cleanup
     return 1
fi


cat<<EOF
* The command was successful
* To launch, just type "DAQInterface &" (excluding quotes, ampersand optional)
* Output will be logged in ${DAQINTERFACE_LOGDIR}/DAQInterface_partition<N>.log, where <N> 
  is the partition the DAQInterface instance is on
* Help is available at https://cdcvs.fnal.gov/redmine/projects/artdaq-utilities/wiki/Artdaq-daqinterface
EOF
 
echo

export DAQINTERFACE_STANDARD_SOURCEFILE_SOURCED=true

return 0

